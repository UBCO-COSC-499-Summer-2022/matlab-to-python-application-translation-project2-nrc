import numpy as np
from nrcemt.alignment_software.engine.optimization import (
    normalize_marker_data,
    optimize_magnification_and_rotation,
    optimize_particle_model
)


def test_optimize_particle_model():
    normalized_markers = normalize_marker_data(markers)
    tilt = np.arange(61) * 3
    x, y, z, alpha, phai = optimize_particle_model(normalized_markers, tilt)
    np.testing.assert_allclose(x, [
        -33.9940, -119.2370, 12.1170, 64.8145, 76.2996
    ], rtol=1e-4)
    np.testing.assert_allclose(y, [
        236.3193, 110.7438, -135.3844, 21.7134, -233.3922,
    ], rtol=1e-4)
    np.testing.assert_allclose(z, [
        -74.9492, -29.2715, 30.8413, -32.2439, 105.6234,
    ], rtol=1e-4)
    np.testing.assert_allclose([alpha, phai], [2.8963, -0.2604], rtol=1e-4)


def test_optimize_rotation_and_magnification():
    normalized_markers = normalize_marker_data(markers)
    tilt = np.arange(61) * 3
    x, y, z, alpha, phai = optimize_particle_model(normalized_markers, tilt)
    magnification, alpha, phai = optimize_magnification_and_rotation(
        normalized_markers, x, y, z, tilt, alpha, phai,
        fixed_phai=False, group_rotation=True, group_magnification=True
    )
    np.testing.assert_allclose(magnification, [
        1.0057, 1.0008, 1.0005, 1.0027, 1.0043, 1.0023, 1.0007, 1.0015, 1.0010,
        0.9986, 1.0006, 0.9975, 0.9993, 1.0017, 0.9995, 1.0007, 0.9996, 1.0006,
        0.9995, 1.0014, 0.9954, 0.9978, 0.9944, 0.9859, 0.9932, 0.9907, 0.9905,
        0.9968, 0.9923, 0.9919, 0.9935, 0.9909, 0.9938, 0.9858, 0.9954, 0.9963,
        0.9971, 1.0003, 0.9988, 1.0006, 0.9994, 1.0019, 1.0017, 1.0030, 1.0002,
        1.0015, 1.0023, 1.0021, 1.0037, 1.0024, 1.0020, 1.0018, 1.0035, 1.0018,
        1.0042, 1.0018, 1.0022, 1.0016, 1.0001, 1.0010, 1.0054
    ], rtol=1e-4)
    np.testing.assert_allclose(alpha, [
        2.5957, 3.0231, 2.9435, 2.8731, 2.8244, 2.8748, 2.9392, 2.9536, 2.9115,
        3.0800, 3.0439, 3.0873, 3.1964, 3.2012, 3.2722, 3.3255, 2.9540, 2.8146,
        2.8040, 2.9599, 2.5963, 2.3056, 2.4256, 1.8627, 2.2623, 2.1261, 2.1547,
        2.3726, 2.8391, 2.3440, 2.3526, 2.2316, 2.4408, 2.9496, 2.9305, 3.0430,
        3.0252, 2.6228, 2.4838, 2.4050, 2.2988, 2.2901, 2.2668, 2.5328, 2.5637,
        2.8385, 2.9965, 2.9440, 3.0507, 2.7727, 2.8636, 2.9000, 2.8981, 2.9134,
        3.0006, 3.0953, 3.2373, 3.1426, 3.1976, 3.1820, 3.1170
    ], rtol=1e-4)
    np.testing.assert_allclose(phai, -0.4428, rtol=1e-4)

# get rid of this later and load from file
markers = np.array(
    [
        [
            [534, 851],
            [529, 850],
            [519, 850],
            [509, 850],
            [499, 852],
            [490, 852],
            [481, 851],
            [475, 852],
            [467, 850],
            [461, 851],
            [452, 852],
            [446, 851],
            [439, 851],
            [433, 853],
            [427, 852],
            [423, 852],
            [414, 850],
            [408, 851],
            [404, 852],
            [399, 853],
            [393, 852],
            [388, 851],
            [385, 852],
            [379, 851],
            [377, 850],
            [374, 849],
            [373, 849],
            [371, 851],
            [372, 849],
            [368, 848],
            [368, 847],
            [369, 846],
            [372, 846],
            [378, 844],
            [378, 847],
            [381, 847],
            [384, 846],
            [388, 846],
            [395, 845],
            [398, 845],
            [404, 844],
            [408, 845],
            [417, 844],
            [424, 844],
            [433, 842],
            [442, 843],
            [450, 843],
            [459, 843],
            [469, 842],
            [475, 842],
            [486, 842],
            [497, 842],
            [509, 842],
            [519, 841],
            [531, 841],
            [542, 840],
            [555, 839],
            [566, 838],
            [576, 837],
            [586, 837],
            [598, 838],
        ],
        [
            [443, 726],
            [440, 726],
            [433, 727],
            [426, 728],
            [420, 728],
            [412, 728],
            [408, 728],
            [405, 728],
            [400, 728],
            [398, 727],
            [394, 727],
            [392, 728],
            [390, 728],
            [389, 729],
            [388, 729],
            [387, 728],
            [386, 728],
            [384, 728],
            [383, 728],
            [383, 729],
            [384, 729],
            [384, 729],
            [386, 727],
            [387, 724],
            [388, 722],
            [390, 723],
            [391, 722],
            [394, 725],
            [399, 723],
            [403, 723],
            [407, 722],
            [412, 721],
            [418, 718],
            [427, 718],
            [433, 718],
            [441, 718],
            [446, 716],
            [455, 716],
            [463, 715],
            [472, 717],
            [478, 716],
            [487, 716],
            [499, 715],
            [508, 715],
            [519, 714],
            [528, 713],
            [538, 714],
            [548, 713],
            [558, 713],
            [565, 713],
            [576, 712],
            [587, 710],
            [599, 711],
            [608, 710],
            [619, 709],
            [630, 709],
            [640, 708],
            [650, 708],
            [658, 707],
            [666, 707],
            [676, 706],
        ],
        [
            [563, 476],
            [562, 476],
            [557, 476],
            [552, 475],
            [548, 476],
            [542, 476],
            [538, 476],
            [535, 476],
            [532, 475],
            [528, 475],
            [524, 475],
            [521, 475],
            [517, 475],
            [515, 474],
            [510, 474],
            [507, 473],
            [504, 473],
            [499, 473],
            [496, 475],
            [491, 476],
            [486, 476],
            [484, 476],
            [480, 477],
            [475, 477],
            [472, 475],
            [470, 474],
            [466, 474],
            [463, 474],
            [457, 473],
            [456, 473],
            [455, 472],
            [455, 471],
            [454, 470],
            [452, 469],
            [450, 470],
            [449, 470],
            [449, 468],
            [451, 469],
            [453, 469],
            [452, 470],
            [454, 470],
            [454, 470],
            [459, 469],
            [458, 468],
            [461, 468],
            [463, 468],
            [465, 469],
            [470, 468],
            [473, 467],
            [475, 468],
            [479, 468],
            [484, 468],
            [489, 468],
            [494, 468],
            [500, 467],
            [505, 469],
            [511, 467],
            [516, 467],
            [520, 467],
            [525, 467],
            [531, 466],
        ],
        [
            [623, 631],
            [618, 631],
            [612, 632],
            [602, 632],
            [595, 631],
            [585, 632],
            [577, 632],
            [570, 632],
            [563, 632],
            [557, 632],
            [547, 632],
            [539, 632],
            [531, 633],
            [524, 632],
            [516, 633],
            [508, 632],
            [501, 632],
            [491, 632],
            [485, 634],
            [475, 634],
            [464, 632],
            [459, 633],
            [452, 633],
            [443, 632],
            [438, 630],
            [431, 630],
            [426, 632],
            [418, 634],
            [412, 632],
            [404, 631],
            [400, 630],
            [398, 630],
            [394, 629],
            [390, 630],
            [387, 630],
            [384, 631],
            [381, 630],
            [381, 630],
            [382, 630],
            [382, 631],
            [380, 632],
            [380, 631],
            [383, 631],
            [384, 630],
            [388, 631],
            [390, 629],
            [394, 630],
            [398, 630],
            [403, 630],
            [404, 629],
            [409, 630],
            [415, 629],
            [423, 628],
            [430, 629],
            [439, 628],
            [446, 628],
            [455, 628],
            [463, 627],
            [471, 627],
            [479, 627],
            [487, 626],
        ],
        [
            [623, 372],
            [622, 372],
            [622, 373],
            [622, 372],
            [621, 372],
            [618, 373],
            [616, 372],
            [617, 372],
            [615, 371],
            [613, 372],
            [610, 371],
            [608, 372],
            [605, 370],
            [603, 371],
            [600, 371],
            [598, 370],
            [595, 370],
            [592, 371],
            [588, 372],
            [583, 371],
            [580, 375],
            [577, 374],
            [571, 375],
            [567, 380],
            [560, 373],
            [554, 375],
            [549, 375],
            [542, 374],
            [535, 373],
            [530, 374],
            [524, 372],
            [519, 373],
            [514, 370],
            [508, 373],
            [503, 370],
            [498, 370],
            [492, 369],
            [492, 368],
            [491, 368],
            [487, 368],
            [483, 368],
            [478, 368],
            [477, 368],
            [472, 368],
            [471, 368],
            [466, 368],
            [462, 368],
            [460, 369],
            [458, 368],
            [455, 369],
            [455, 370],
            [455, 370],
            [456, 370],
            [455, 370],
            [455, 369],
            [455, 370],
            [456, 370],
            [458, 370],
            [458, 370],
            [458, 370],
            [461, 369],
        ],
    ]
)
